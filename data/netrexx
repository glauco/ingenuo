/* NetRexx */ options replace format comments java crossref savelog symbols nobinary import java.io.StringWriter import javax.xml.parsers.DocumentBuilderFactoryimport javax.xml.transform.Resultimport javax.xml.transform.Sourceimport javax.xml.transform.Transformerimport javax.xml.transform.TransformerFactoryimport javax.xml.transform.dom.DOMSourceimport javax.xml.transform.stream.StreamResult import org.w3c.dom.Documentimport org.w3c.dom.Element names = [String -  "April", "Tam O'Shanter", "Emily" -] remarks = [ String -     "Bubbly: I'm > Tam and <= Emily" -  ,  'Burns: "When chapman billies leave the street ..."' -  ,  'Short & shrift' -] do  -- Create a new XML document  doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument()   -- Append the root element  root = doc.createElement("CharacterRemarks")  doc.appendChild(root)   -- Read input data and create a new <Character> element for each name.  loop i_ = 0 to names.length - 1    character = doc.createElement("Character")    root.appendChild(character)    character.setAttribute("name", names[i_])    character.appendChild(doc.createTextNode(remarks[i_]))    end i_   -- Serializing XML in Java is unnecessary complicated  -- Create a Source from the document.  source = DOMSource(doc)   -- This StringWriter acts as a buffer  buffer = StringWriter()   -- Create a Result as a transformer target.  result = StreamResult(buffer)   -- The Transformer is used to copy the Source to the Result object.  transformer = TransformerFactory.newInstance().newTransformer()  transformer.setOutputProperty("indent", "yes")  transformer.transform(source, result)   -- Now the buffer is filled with the serialized XML and we can print it to the console.  say buffer.toStringcatch ex = Exception  ex.printStackTraceend return /* NetRexx */ options replace format comments java crossref savelog symbols nobinary import java.io.StringWriter import javax.xml.stream.XMLOutputFactoryimport javax.xml.stream.XMLStreamWriter names = [String -  "April", "Tam O'Shanter", "Emily" -] remarks = [ String -     "Bubbly: I'm > Tam and <= Emily" -  ,  'Burns: "When chapman billies leave the street ..."' -  ,  'Short & shrift' -] do  buffer = StringWriter()   out = XMLOutputFactory.newInstance().createXMLStreamWriter(buffer)   out.writeStartDocument("UTF-8", "1.0")  out.writeCharacters('\n')   out.writeStartElement("CharacterRemarks")  out.writeCharacters('\n')   loop i_ = 0 to names.length - 1    out.writeStartElement("Character")    out.writeAttribute("name", names[i_])    out.writeCharacters(remarks[i_])    out.writeEndElement()    out.writeCharacters('\n')    end i_   out.writeEndElement()  out.writeEndDocument()  out.writeCharacters('\n')   say buffer.toStringcatch ex = Exception  ex.printStackTraceend return 